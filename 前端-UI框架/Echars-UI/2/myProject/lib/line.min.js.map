{"version":3,"file":"line.min.js","sources":["../node_modules/echarts/lib/echarts.js","../node_modules/echarts/lib/chart/line.js","../node_modules/echarts/lib/component/tooltip.js","../node_modules/echarts/lib/component/title.js","../node_modules/echarts/lib/component/toolbox.js","../line.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"./config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrender = require(\"zrender/lib/zrender\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar colorTool = require(\"zrender/lib/tool/color\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar timsort = require(\"zrender/lib/core/timsort\");\n\nvar Eventful = require(\"zrender/lib/mixin/Eventful\");\n\nvar GlobalModel = require(\"./model/Global\");\n\nvar ExtensionAPI = require(\"./ExtensionAPI\");\n\nvar CoordinateSystemManager = require(\"./CoordinateSystem\");\n\nvar OptionManager = require(\"./model/OptionManager\");\n\nvar backwardCompat = require(\"./preprocessor/backwardCompat\");\n\nvar dataStack = require(\"./processor/dataStack\");\n\nvar ComponentModel = require(\"./model/Component\");\n\nvar SeriesModel = require(\"./model/Series\");\n\nvar ComponentView = require(\"./view/Component\");\n\nvar ChartView = require(\"./view/Chart\");\n\nvar graphic = require(\"./util/graphic\");\n\nvar modelUtil = require(\"./util/model\");\n\nvar _throttle = require(\"./util/throttle\");\n\nvar throttle = _throttle.throttle;\n\nvar seriesColor = require(\"./visual/seriesColor\");\n\nvar aria = require(\"./visual/aria\");\n\nvar loadingDefault = require(\"./loading/default\");\n\nvar Scheduler = require(\"./stream/Scheduler\");\n\nvar lightTheme = require(\"./theme/light\");\n\nvar darkTheme = require(\"./theme/dark\");\n\nrequire(\"./component/dataset\");\n\nvar mapDataStorage = require(\"./coord/geo/mapDataStorage\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar assert = zrUtil.assert;\nvar each = zrUtil.each;\nvar isFunction = zrUtil.isFunction;\nvar isObject = zrUtil.isObject;\nvar parseClassType = ComponentModel.parseClassType;\nvar version = '4.6.0';\nvar dependencies = {\n  zrender: '4.2.0'\n};\nvar TEST_FRAME_REMAIN_TIME = 1;\nvar PRIORITY_PROCESSOR_FILTER = 1000;\nvar PRIORITY_PROCESSOR_SERIES_FILTER = 800;\nvar PRIORITY_PROCESSOR_DATASTACK = 900;\nvar PRIORITY_PROCESSOR_STATISTIC = 5000;\nvar PRIORITY_VISUAL_LAYOUT = 1000;\nvar PRIORITY_VISUAL_PROGRESSIVE_LAYOUT = 1100;\nvar PRIORITY_VISUAL_GLOBAL = 2000;\nvar PRIORITY_VISUAL_CHART = 3000;\nvar PRIORITY_VISUAL_POST_CHART_LAYOUT = 3500;\nvar PRIORITY_VISUAL_COMPONENT = 4000; // FIXME\n// necessary?\n\nvar PRIORITY_VISUAL_BRUSH = 5000;\nvar PRIORITY = {\n  PROCESSOR: {\n    FILTER: PRIORITY_PROCESSOR_FILTER,\n    SERIES_FILTER: PRIORITY_PROCESSOR_SERIES_FILTER,\n    STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n  },\n  VISUAL: {\n    LAYOUT: PRIORITY_VISUAL_LAYOUT,\n    PROGRESSIVE_LAYOUT: PRIORITY_VISUAL_PROGRESSIVE_LAYOUT,\n    GLOBAL: PRIORITY_VISUAL_GLOBAL,\n    CHART: PRIORITY_VISUAL_CHART,\n    POST_CHART_LAYOUT: PRIORITY_VISUAL_POST_CHART_LAYOUT,\n    COMPONENT: PRIORITY_VISUAL_COMPONENT,\n    BRUSH: PRIORITY_VISUAL_BRUSH\n  }\n}; // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n// where they must not be invoked nestedly, except the only case: invoke\n// dispatchAction with updateMethod \"none\" in main process.\n// This flag is used to carry out this rule.\n// All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\n\nvar IN_MAIN_PROCESS = '__flagInMainProcess';\nvar OPTION_UPDATED = '__optionUpdated';\nvar ACTION_REG = /^[a-zA-Z0-9_]+$/;\n\nfunction createRegisterEventWithLowercaseName(method, ignoreDisposed) {\n  return function (eventName, handler, context) {\n    if (!ignoreDisposed && this._disposed) {\n      disposedWarning(this.id);\n      return;\n    } // Event name is all lowercase\n\n\n    eventName = eventName && eventName.toLowerCase();\n    Eventful.prototype[method].call(this, eventName, handler, context);\n  };\n}\n/**\n * @module echarts~MessageCenter\n */\n\n\nfunction MessageCenter() {\n  Eventful.call(this);\n}\n\nMessageCenter.prototype.on = createRegisterEventWithLowercaseName('on', true);\nMessageCenter.prototype.off = createRegisterEventWithLowercaseName('off', true);\nMessageCenter.prototype.one = createRegisterEventWithLowercaseName('one', true);\nzrUtil.mixin(MessageCenter, Eventful);\n/**\n * @module echarts~ECharts\n */\n\nfunction ECharts(dom, theme, opts) {\n  opts = opts || {}; // Get theme by name\n\n  if (typeof theme === 'string') {\n    theme = themeStorage[theme];\n  }\n  /**\n   * @type {string}\n   */\n\n\n  this.id;\n  /**\n   * Group id\n   * @type {string}\n   */\n\n  this.group;\n  /**\n   * @type {HTMLElement}\n   * @private\n   */\n\n  this._dom = dom;\n  var defaultRenderer = 'canvas';\n\n  /**\n   * @type {module:zrender/ZRender}\n   * @private\n   */\n  var zr = this._zr = zrender.init(dom, {\n    renderer: opts.renderer || defaultRenderer,\n    devicePixelRatio: opts.devicePixelRatio,\n    width: opts.width,\n    height: opts.height\n  });\n  /**\n   * Expect 60 fps.\n   * @type {Function}\n   * @private\n   */\n\n  this._throttledZrFlush = throttle(zrUtil.bind(zr.flush, zr), 17);\n  var theme = zrUtil.clone(theme);\n  theme && backwardCompat(theme, true);\n  /**\n   * @type {Object}\n   * @private\n   */\n\n  this._theme = theme;\n  /**\n   * @type {Array.<module:echarts/view/Chart>}\n   * @private\n   */\n\n  this._chartsViews = [];\n  /**\n   * @type {Object.<string, module:echarts/view/Chart>}\n   * @private\n   */\n\n  this._chartsMap = {};\n  /**\n   * @type {Array.<module:echarts/view/Component>}\n   * @private\n   */\n\n  this._componentsViews = [];\n  /**\n   * @type {Object.<string, module:echarts/view/Component>}\n   * @private\n   */\n\n  this._componentsMap = {};\n  /**\n   * @type {module:echarts/CoordinateSystem}\n   * @private\n   */\n\n  this._coordSysMgr = new CoordinateSystemManager();\n  /**\n   * @type {module:echarts/ExtensionAPI}\n   * @private\n   */\n\n  var api = this._api = createExtensionAPI(this); // Sort on demand\n\n  function prioritySortFunc(a, b) {\n    return a.__prio - b.__prio;\n  }\n\n  timsort(visualFuncs, prioritySortFunc);\n  timsort(dataProcessorFuncs, prioritySortFunc);\n  /**\n   * @type {module:echarts/stream/Scheduler}\n   */\n\n  this._scheduler = new Scheduler(this, api, dataProcessorFuncs, visualFuncs);\n  Eventful.call(this, this._ecEventProcessor = new EventProcessor());\n  /**\n   * @type {module:echarts~MessageCenter}\n   * @private\n   */\n\n  this._messageCenter = new MessageCenter(); // Init mouse events\n\n  this._initEvents(); // In case some people write `window.onresize = chart.resize`\n\n\n  this.resize = zrUtil.bind(this.resize, this); // Can't dispatch action during rendering procedure\n\n  this._pendingActions = [];\n  zr.animation.on('frame', this._onframe, this);\n  bindRenderedEvent(zr, this); // ECharts instance can be used as value.\n\n  zrUtil.setAsPrimitive(this);\n}\n\nvar echartsProto = ECharts.prototype;\n\nechartsProto._onframe = function () {\n  if (this._disposed) {\n    return;\n  }\n\n  var scheduler = this._scheduler; // Lazy update\n\n  if (this[OPTION_UPDATED]) {\n    var silent = this[OPTION_UPDATED].silent;\n    this[IN_MAIN_PROCESS] = true;\n    prepare(this);\n    updateMethods.update.call(this);\n    this[IN_MAIN_PROCESS] = false;\n    this[OPTION_UPDATED] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  } // Avoid do both lazy update and progress in one frame.\n  else if (scheduler.unfinished) {\n      // Stream progress.\n      var remainTime = TEST_FRAME_REMAIN_TIME;\n      var ecModel = this._model;\n      var api = this._api;\n      scheduler.unfinished = false;\n\n      do {\n        var startTime = +new Date();\n        scheduler.performSeriesTasks(ecModel); // Currently dataProcessorFuncs do not check threshold.\n\n        scheduler.performDataProcessorTasks(ecModel);\n        updateStreamModes(this, ecModel); // Do not update coordinate system here. Because that coord system update in\n        // each frame is not a good user experience. So we follow the rule that\n        // the extent of the coordinate system is determin in the first frame (the\n        // frame is executed immedietely after task reset.\n        // this._coordSysMgr.update(ecModel, api);\n        // console.log('--- ec frame visual ---', remainTime);\n\n        scheduler.performVisualTasks(ecModel);\n        renderSeries(this, this._model, api, 'remain');\n        remainTime -= +new Date() - startTime;\n      } while (remainTime > 0 && scheduler.unfinished); // Call flush explicitly for trigger finished event.\n\n\n      if (!scheduler.unfinished) {\n        this._zr.flush();\n      } // Else, zr flushing be ensue within the same frame,\n      // because zr flushing is after onframe event.\n\n    }\n};\n/**\n * @return {HTMLElement}\n */\n\n\nechartsProto.getDom = function () {\n  return this._dom;\n};\n/**\n * @return {module:zrender~ZRender}\n */\n\n\nechartsProto.getZr = function () {\n  return this._zr;\n};\n/**\n * Usage:\n * chart.setOption(option, notMerge, lazyUpdate);\n * chart.setOption(option, {\n *     notMerge: ...,\n *     lazyUpdate: ...,\n *     silent: ...\n * });\n *\n * @param {Object} option\n * @param {Object|boolean} [opts] opts or notMerge.\n * @param {boolean} [opts.notMerge=false]\n * @param {boolean} [opts.lazyUpdate=false] Useful when setOption frequently.\n */\n\n\nechartsProto.setOption = function (option, notMerge, lazyUpdate) {\n  if (this._disposed) {\n    disposedWarning(this.id);\n    return;\n  }\n\n  var silent;\n\n  if (isObject(notMerge)) {\n    lazyUpdate = notMerge.lazyUpdate;\n    silent = notMerge.silent;\n    notMerge = notMerge.notMerge;\n  }\n\n  this[IN_MAIN_PROCESS] = true;\n\n  if (!this._model || notMerge) {\n    var optionManager = new OptionManager(this._api);\n    var theme = this._theme;\n    var ecModel = this._model = new GlobalModel();\n    ecModel.scheduler = this._scheduler;\n    ecModel.init(null, null, theme, optionManager);\n  }\n\n  this._model.setOption(option, optionPreprocessorFuncs);\n\n  if (lazyUpdate) {\n    this[OPTION_UPDATED] = {\n      silent: silent\n    };\n    this[IN_MAIN_PROCESS] = false;\n  } else {\n    prepare(this);\n    updateMethods.update.call(this); // Ensure zr refresh sychronously, and then pixel in canvas can be\n    // fetched after `setOption`.\n\n    this._zr.flush();\n\n    this[OPTION_UPDATED] = false;\n    this[IN_MAIN_PROCESS] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  }\n};\n/**\n * @DEPRECATED\n */\n\n\nechartsProto.setTheme = function () {\n  console.error('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\n};\n/**\n * @return {module:echarts/model/Global}\n */\n\n\nechartsProto.getModel = function () {\n  return this._model;\n};\n/**\n * @return {Object}\n */\n\n\nechartsProto.getOption = function () {\n  return this._model && this._model.getOption();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getWidth = function () {\n  return this._zr.getWidth();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getHeight = function () {\n  return this._zr.getHeight();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getDevicePixelRatio = function () {\n  return this._zr.painter.dpr || window.devicePixelRatio || 1;\n};\n/**\n * Get canvas which has all thing rendered\n * @param {Object} opts\n * @param {string} [opts.backgroundColor]\n * @return {string}\n */\n\n\nechartsProto.getRenderedCanvas = function (opts) {\n  if (!env.canvasSupported) {\n    return;\n  }\n\n  opts = opts || {};\n  opts.pixelRatio = opts.pixelRatio || 1;\n  opts.backgroundColor = opts.backgroundColor || this._model.get('backgroundColor');\n  var zr = this._zr; // var list = zr.storage.getDisplayList();\n  // Stop animations\n  // Never works before in init animation, so remove it.\n  // zrUtil.each(list, function (el) {\n  //     el.stopAnimation(true);\n  // });\n\n  return zr.painter.getRenderedCanvas(opts);\n};\n/**\n * Get svg data url\n * @return {string}\n */\n\n\nechartsProto.getSvgDataUrl = function () {\n  if (!env.svgSupported) {\n    return;\n  }\n\n  var zr = this._zr;\n  var list = zr.storage.getDisplayList(); // Stop animations\n\n  zrUtil.each(list, function (el) {\n    el.stopAnimation(true);\n  });\n  return zr.painter.pathToDataUrl();\n};\n/**\n * @return {string}\n * @param {Object} opts\n * @param {string} [opts.type='png']\n * @param {string} [opts.pixelRatio=1]\n * @param {string} [opts.backgroundColor]\n * @param {string} [opts.excludeComponents]\n */\n\n\nechartsProto.getDataURL = function (opts) {\n  if (this._disposed) {\n    disposedWarning(this.id);\n    return;\n  }\n\n  opts = opts || {};\n  var excludeComponents = opts.excludeComponents;\n  var ecModel = this._model;\n  var excludesComponentViews = [];\n  var self = this;\n  each(excludeComponents, function (componentType) {\n    ecModel.eachComponent({\n      mainType: componentType\n    }, function (component) {\n      var view = self._componentsMap[component.__viewId];\n\n      if (!view.group.ignore) {\n        excludesComponentViews.push(view);\n        view.group.ignore = true;\n      }\n    });\n  });\n  var url = this._zr.painter.getType() === 'svg' ? this.getSvgDataUrl() : this.getRenderedCanvas(opts).toDataURL('image/' + (opts && opts.type || 'png'));\n  each(excludesComponentViews, function (view) {\n    view.group.ignore = false;\n  });\n  return url;\n};\n/**\n * @return {string}\n * @param {Object} opts\n * @param {string} [opts.type='png']\n * @param {string} [opts.pixelRatio=1]\n * @param {string} [opts.backgroundColor]\n */\n\n\nechartsProto.getConnectedDataURL = function (opts) {\n  if (this._disposed) {\n    disposedWarning(this.id);\n    return;\n  }\n\n  if (!env.canvasSupported) {\n    return;\n  }\n\n  var groupId = this.group;\n  var mathMin = Math.min;\n  var mathMax = Math.max;\n  var MAX_NUMBER = Infinity;\n\n  if (connectedGroups[groupId]) {\n    var left = MAX_NUMBER;\n    var top = MAX_NUMBER;\n    var right = -MAX_NUMBER;\n    var bottom = -MAX_NUMBER;\n    var canvasList = [];\n    var dpr = opts && opts.pixelRatio || 1;\n    zrUtil.each(instances, function (chart, id) {\n      if (chart.group === groupId) {\n        var canvas = chart.getRenderedCanvas(zrUtil.clone(opts));\n        var boundingRect = chart.getDom().getBoundingClientRect();\n        left = mathMin(boundingRect.left, left);\n        top = mathMin(boundingRect.top, top);\n        right = mathMax(boundingRect.right, right);\n        bottom = mathMax(boundingRect.bottom, bottom);\n        canvasList.push({\n          dom: canvas,\n          left: boundingRect.left,\n          top: boundingRect.top\n        });\n      }\n    });\n    left *= dpr;\n    top *= dpr;\n    right *= dpr;\n    bottom *= dpr;\n    var width = right - left;\n    var height = bottom - top;\n    var targetCanvas = zrUtil.createCanvas();\n    targetCanvas.width = width;\n    targetCanvas.height = height;\n    var zr = zrender.init(targetCanvas); // Background between the charts\n\n    if (opts.connectedBackgroundColor) {\n      zr.add(new graphic.Rect({\n        shape: {\n          x: 0,\n          y: 0,\n          width: width,\n          height: height\n        },\n        style: {\n          fill: opts.connectedBackgroundColor\n        }\n      }));\n    }\n\n    each(canvasList, function (item) {\n      var img = new graphic.Image({\n        style: {\n          x: item.left * dpr - left,\n          y: item.top * dpr - top,\n          image: item.dom\n        }\n      });\n      zr.add(img);\n    });\n    zr.refreshImmediately();\n    return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n  } else {\n    return this.getDataURL(opts);\n  }\n};\n/**\n * Convert from logical coordinate system to pixel coordinate system.\n * See CoordinateSystem#convertToPixel.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId, geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName,\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {Array|number} result\n */\n\n\nechartsProto.convertToPixel = zrUtil.curry(doConvertPixel, 'convertToPixel');\n/**\n * Convert from pixel coordinate system to logical coordinate system.\n * See CoordinateSystem#convertFromPixel.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId / geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {Array|number} result\n */\n\nechartsProto.convertFromPixel = zrUtil.curry(doConvertPixel, 'convertFromPixel');\n\nfunction doConvertPixel(methodName, finder, value) {\n  if (this._disposed) {\n    disposedWarning(this.id);\n    return;\n  }\n\n  var ecModel = this._model;\n\n  var coordSysList = this._coordSysMgr.getCoordinateSystems();\n\n  var result;\n  finder = modelUtil.parseFinder(ecModel, finder);\n\n  for (var i = 0; i < coordSysList.length; i++) {\n    var coordSys = coordSysList[i];\n\n    if (coordSys[methodName] && (result = coordSys[methodName](ecModel, finder, value)) != null) {\n      return result;\n    }\n  }\n}\n/**\n * Is the specified coordinate systems or components contain the given pixel point.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId / geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName,\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {boolean} result\n */\n\n\nechartsProto.containPixel = function (finder, value) {\n  if (this._disposed) {\n    disposedWarning(this.id);\n    return;\n  }\n\n  var ecModel = this._model;\n  var result;\n  finder = modelUtil.parseFinder(ecModel, finder);\n  zrUtil.each(finder, function (models, key) {\n    key.indexOf('Models') >= 0 && zrUtil.each(models, function (model) {\n      var coordSys = model.coordinateSystem;\n\n      if (coordSys && coordSys.containPoint) {\n        result |= !!coordSys.containPoint(value);\n      } else if (key === 'seriesModels') {\n        var view = this._chartsMap[model.__viewId];\n\n        if (view && view.containPoint) {\n          result |= view.containPoint(value, model);\n        } else {}\n      } else {}\n    }, this);\n  }, this);\n  return !!result;\n};\n/**\n * Get visual from series or data.\n * @param {string|Object} finder\n *        If string, e.g., 'series', means {seriesIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            dataIndex / dataIndexInside\n *        }\n *        If dataIndex is not specified, series visual will be fetched,\n *        but not data item visual.\n *        If all of seriesIndex, seriesId, seriesName are not specified,\n *        visual will be fetched from first series.\n * @param {string} visualType 'color', 'symbol', 'symbolSize'\n */\n\n\nechartsProto.getVisual = function (finder, visualType) {\n  var ecModel = this._model;\n  finder = modelUtil.parseFinder(ecModel, finder, {\n    defaultMainType: 'series'\n  });\n  var seriesModel = finder.seriesModel;\n  var data = seriesModel.getData();\n  var dataIndexInside = finder.hasOwnProperty('dataIndexInside') ? finder.dataIndexInside : finder.hasOwnProperty('dataIndex') ? data.indexOfRawIndex(finder.dataIndex) : null;\n  return dataIndexInside != null ? data.getItemVisual(dataIndexInside, visualType) : data.getVisual(visualType);\n};\n/**\n * Get view of corresponding component model\n * @param  {module:echarts/model/Component} componentModel\n * @return {module:echarts/view/Component}\n */\n\n\nechartsProto.getViewOfComponentModel = function (componentModel) {\n  return this._componentsMap[componentModel.__viewId];\n};\n/**\n * Get view of corresponding series model\n * @param  {module:echarts/model/Series} seriesModel\n * @return {module:echarts/view/Chart}\n */\n\n\nechartsProto.getViewOfSeriesModel = function (seriesModel) {\n  return this._chartsMap[seriesModel.__viewId];\n};\n\nvar updateMethods = {\n  prepareAndUpdate: function (payload) {\n    prepare(this);\n    updateMethods.update.call(this, payload);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  update: function (payload) {\n    // console.profile && console.profile('update');\n    var ecModel = this._model;\n    var api = this._api;\n    var zr = this._zr;\n    var coordSysMgr = this._coordSysMgr;\n    var scheduler = this._scheduler; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    scheduler.restoreData(ecModel, payload);\n    scheduler.performSeriesTasks(ecModel); // TODO\n    // Save total ecModel here for undo/redo (after restoring data and before processing data).\n    // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n    // Create new coordinate system each update\n    // In LineView may save the old coordinate system and use it to get the orignal point\n\n    coordSysMgr.create(ecModel, api);\n    scheduler.performDataProcessorTasks(ecModel, payload); // Current stream render is not supported in data process. So we can update\n    // stream modes after data processing, where the filtered data is used to\n    // deteming whether use progressive rendering.\n\n    updateStreamModes(this, ecModel); // We update stream modes before coordinate system updated, then the modes info\n    // can be fetched when coord sys updating (consider the barGrid extent fix). But\n    // the drawback is the full coord info can not be fetched. Fortunately this full\n    // coord is not requied in stream mode updater currently.\n\n    coordSysMgr.update(ecModel, api);\n    clearColorPalette(ecModel);\n    scheduler.performVisualTasks(ecModel, payload);\n    render(this, ecModel, api, payload); // Set background\n\n    var backgroundColor = ecModel.get('backgroundColor') || 'transparent'; // In IE8\n\n    if (!env.canvasSupported) {\n      var colorArr = colorTool.parse(backgroundColor);\n      backgroundColor = colorTool.stringify(colorArr, 'rgb');\n\n      if (colorArr[3] === 0) {\n        backgroundColor = 'transparent';\n      }\n    } else {\n      zr.setBackgroundColor(backgroundColor);\n    }\n\n    performPostUpdateFuncs(ecModel, api); // console.profile && console.profileEnd('update');\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateTransform: function (payload) {\n    var ecModel = this._model;\n    var ecIns = this;\n    var api = this._api; // update before setOption\n\n    if (!ecModel) {\n      return;\n    } // ChartView.markUpdateMethod(payload, 'updateTransform');\n\n\n    var componentDirtyList = [];\n    ecModel.eachComponent(function (componentType, componentModel) {\n      var componentView = ecIns.getViewOfComponentModel(componentModel);\n\n      if (componentView && componentView.__alive) {\n        if (componentView.updateTransform) {\n          var result = componentView.updateTransform(componentModel, ecModel, api, payload);\n          result && result.update && componentDirtyList.push(componentView);\n        } else {\n          componentDirtyList.push(componentView);\n        }\n      }\n    });\n    var seriesDirtyMap = zrUtil.createHashMap();\n    ecModel.eachSeries(function (seriesModel) {\n      var chartView = ecIns._chartsMap[seriesModel.__viewId];\n\n      if (chartView.updateTransform) {\n        var result = chartView.updateTransform(seriesModel, ecModel, api, payload);\n        result && result.update && seriesDirtyMap.set(seriesModel.uid, 1);\n      } else {\n        seriesDirtyMap.set(seriesModel.uid, 1);\n      }\n    });\n    clearColorPalette(ecModel); // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n    // this._scheduler.performVisualTasks(ecModel, payload, 'layout', true);\n\n    this._scheduler.performVisualTasks(ecModel, payload, {\n      setDirty: true,\n      dirtyMap: seriesDirtyMap\n    }); // Currently, not call render of components. Geo render cost a lot.\n    // renderComponents(ecIns, ecModel, api, payload, componentDirtyList);\n\n\n    renderSeries(ecIns, ecModel, api, payload, seriesDirtyMap);\n    performPostUpdateFuncs(ecModel, this._api);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateView: function (payload) {\n    var ecModel = this._model; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    ChartView.markUpdateMethod(payload, 'updateView');\n    clearColorPalette(ecModel); // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n\n    this._scheduler.performVisualTasks(ecModel, payload, {\n      setDirty: true\n    });\n\n    render(this, this._model, this._api, payload);\n    performPostUpdateFuncs(ecModel, this._api);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateVisual: function (payload) {\n    updateMethods.update.call(this, payload); // var ecModel = this._model;\n    // // update before setOption\n    // if (!ecModel) {\n    //     return;\n    // }\n    // ChartView.markUpdateMethod(payload, 'updateVisual');\n    // clearColorPalette(ecModel);\n    // // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n    // this._scheduler.performVisualTasks(ecModel, payload, {visualType: 'visual', setDirty: true});\n    // render(this, this._model, this._api, payload);\n    // performPostUpdateFuncs(ecModel, this._api);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateLayout: function (payload) {\n    updateMethods.update.call(this, payload); // var ecModel = this._model;\n    // // update before setOption\n    // if (!ecModel) {\n    //     return;\n    // }\n    // ChartView.markUpdateMethod(payload, 'updateLayout');\n    // // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n    // // this._scheduler.performVisualTasks(ecModel, payload, 'layout', true);\n    // this._scheduler.performVisualTasks(ecModel, payload, {setDirty: true});\n    // render(this, this._model, this._api, payload);\n    // performPostUpdateFuncs(ecModel, this._api);\n  }\n};\n\nfunction prepare(ecIns) {\n  var ecModel = ecIns._model;\n  var scheduler = ecIns._scheduler;\n  scheduler.restorePipelines(ecModel);\n  scheduler.prepareStageTasks();\n  prepareView(ecIns, 'component', ecModel, scheduler);\n  prepareView(ecIns, 'chart', ecModel, scheduler);\n  scheduler.plan();\n}\n/**\n * @private\n */\n\n\nfunction updateDirectly(ecIns, method, payload, mainType, subType) {\n  var ecModel = ecIns._model; // broadcast\n\n  if (!mainType) {\n    // FIXME\n    // Chart will not be update directly here, except set dirty.\n    // But there is no such scenario now.\n    each(ecIns._componentsViews.concat(ecIns._chartsViews), callView);\n    return;\n  }\n\n  var query = {};\n  query[mainType + 'Id'] = payload[mainType + 'Id'];\n  query[mainType + 'Index'] = payload[mainType + 'Index'];\n  query[mainType + 'Name'] = payload[mainType + 'Name'];\n  var condition = {\n    mainType: mainType,\n    query: query\n  };\n  subType && (condition.subType = subType); // subType may be '' by parseClassType;\n\n  var excludeSeriesId = payload.excludeSeriesId;\n\n  if (excludeSeriesId != null) {\n    excludeSeriesId = zrUtil.createHashMap(modelUtil.normalizeToArray(excludeSeriesId));\n  } // If dispatchAction before setOption, do nothing.\n\n\n  ecModel && ecModel.eachComponent(condition, function (model) {\n    if (!excludeSeriesId || excludeSeriesId.get(model.id) == null) {\n      callView(ecIns[mainType === 'series' ? '_chartsMap' : '_componentsMap'][model.__viewId]);\n    }\n  }, ecIns);\n\n  function callView(view) {\n    view && view.__alive && view[method] && view[method](view.__model, ecModel, ecIns._api, payload);\n  }\n}\n/**\n * Resize the chart\n * @param {Object} opts\n * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n * @param {boolean} [opts.silent=false]\n */\n\n\nechartsProto.resize = function (opts) {\n  if (this._disposed) {\n    disposedWarning(this.id);\n    return;\n  }\n\n  this._zr.resize(opts);\n\n  var ecModel = this._model; // Resize loading effect\n\n  this._loadingFX && this._loadingFX.resize();\n\n  if (!ecModel) {\n    return;\n  }\n\n  var optionChanged = ecModel.resetOption('media');\n  var silent = opts && opts.silent;\n  this[IN_MAIN_PROCESS] = true;\n  optionChanged && prepare(this);\n  updateMethods.update.call(this);\n  this[IN_MAIN_PROCESS] = false;\n  flushPendingActions.call(this, silent);\n  triggerUpdatedEvent.call(this, silent);\n};\n\nfunction updateStreamModes(ecIns, ecModel) {\n  var chartsMap = ecIns._chartsMap;\n  var scheduler = ecIns._scheduler;\n  ecModel.eachSeries(function (seriesModel) {\n    scheduler.updateStreamModes(seriesModel, chartsMap[seriesModel.__viewId]);\n  });\n}\n/**\n * Show loading effect\n * @param  {string} [name='default']\n * @param  {Object} [cfg]\n */\n\n\nechartsProto.showLoading = function (name, cfg) {\n  if (this._disposed) {\n    disposedWarning(this.id);\n    return;\n  }\n\n  if (isObject(name)) {\n    cfg = name;\n    name = '';\n  }\n\n  name = name || 'default';\n  this.hideLoading();\n\n  if (!loadingEffects[name]) {\n    return;\n  }\n\n  var el = loadingEffects[name](this._api, cfg);\n  var zr = this._zr;\n  this._loadingFX = el;\n  zr.add(el);\n};\n/**\n * Hide loading effect\n */\n\n\nechartsProto.hideLoading = function () {\n  if (this._disposed) {\n    disposedWarning(this.id);\n    return;\n  }\n\n  this._loadingFX && this._zr.remove(this._loadingFX);\n  this._loadingFX = null;\n};\n/**\n * @param {Object} eventObj\n * @return {Object}\n */\n\n\nechartsProto.makeActionFromEvent = function (eventObj) {\n  var payload = zrUtil.extend({}, eventObj);\n  payload.type = eventActionMap[eventObj.type];\n  return payload;\n};\n/**\n * @pubilc\n * @param {Object} payload\n * @param {string} [payload.type] Action type\n * @param {Object|boolean} [opt] If pass boolean, means opt.silent\n * @param {boolean} [opt.silent=false] Whether trigger events.\n * @param {boolean} [opt.flush=undefined]\n *                  true: Flush immediately, and then pixel in canvas can be fetched\n *                      immediately. Caution: it might affect performance.\n *                  false: Not flush.\n *                  undefined: Auto decide whether perform flush.\n */\n\n\nechartsProto.dispatchAction = function (payload, opt) {\n  if (this._disposed) {\n    disposedWarning(this.id);\n    return;\n  }\n\n  if (!isObject(opt)) {\n    opt = {\n      silent: !!opt\n    };\n  }\n\n  if (!actions[payload.type]) {\n    return;\n  } // Avoid dispatch action before setOption. Especially in `connect`.\n\n\n  if (!this._model) {\n    return;\n  } // May dispatchAction in rendering procedure\n\n\n  if (this[IN_MAIN_PROCESS]) {\n    this._pendingActions.push(payload);\n\n    return;\n  }\n\n  doDispatchAction.call(this, payload, opt.silent);\n\n  if (opt.flush) {\n    this._zr.flush(true);\n  } else if (opt.flush !== false && env.browser.weChat) {\n    // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`\n    // hang when sliding page (on touch event), which cause that zr does not\n    // refresh util user interaction finished, which is not expected.\n    // But `dispatchAction` may be called too frequently when pan on touch\n    // screen, which impacts performance if do not throttle them.\n    this._throttledZrFlush();\n  }\n\n  flushPendingActions.call(this, opt.silent);\n  triggerUpdatedEvent.call(this, opt.silent);\n};\n\nfunction doDispatchAction(payload, silent) {\n  var payloadType = payload.type;\n  var escapeConnect = payload.escapeConnect;\n  var actionWrap = actions[payloadType];\n  var actionInfo = actionWrap.actionInfo;\n  var cptType = (actionInfo.update || 'update').split(':');\n  var updateMethod = cptType.pop();\n  cptType = cptType[0] != null && parseClassType(cptType[0]);\n  this[IN_MAIN_PROCESS] = true;\n  var payloads = [payload];\n  var batched = false; // Batch action\n\n  if (payload.batch) {\n    batched = true;\n    payloads = zrUtil.map(payload.batch, function (item) {\n      item = zrUtil.defaults(zrUtil.extend({}, item), payload);\n      item.batch = null;\n      return item;\n    });\n  }\n\n  var eventObjBatch = [];\n  var eventObj;\n  var isHighDown = payloadType === 'highlight' || payloadType === 'downplay';\n  each(payloads, function (batchItem) {\n    // Action can specify the event by return it.\n    eventObj = actionWrap.action(batchItem, this._model, this._api); // Emit event outside\n\n    eventObj = eventObj || zrUtil.extend({}, batchItem); // Convert type to eventType\n\n    eventObj.type = actionInfo.event || eventObj.type;\n    eventObjBatch.push(eventObj); // light update does not perform data process, layout and visual.\n\n    if (isHighDown) {\n      // method, payload, mainType, subType\n      updateDirectly(this, updateMethod, batchItem, 'series');\n    } else if (cptType) {\n      updateDirectly(this, updateMethod, batchItem, cptType.main, cptType.sub);\n    }\n  }, this);\n\n  if (updateMethod !== 'none' && !isHighDown && !cptType) {\n    // Still dirty\n    if (this[OPTION_UPDATED]) {\n      // FIXME Pass payload ?\n      prepare(this);\n      updateMethods.update.call(this, payload);\n      this[OPTION_UPDATED] = false;\n    } else {\n      updateMethods[updateMethod].call(this, payload);\n    }\n  } // Follow the rule of action batch\n\n\n  if (batched) {\n    eventObj = {\n      type: actionInfo.event || payloadType,\n      escapeConnect: escapeConnect,\n      batch: eventObjBatch\n    };\n  } else {\n    eventObj = eventObjBatch[0];\n  }\n\n  this[IN_MAIN_PROCESS] = false;\n  !silent && this._messageCenter.trigger(eventObj.type, eventObj);\n}\n\nfunction flushPendingActions(silent) {\n  var pendingActions = this._pendingActions;\n\n  while (pendingActions.length) {\n    var payload = pendingActions.shift();\n    doDispatchAction.call(this, payload, silent);\n  }\n}\n\nfunction triggerUpdatedEvent(silent) {\n  !silent && this.trigger('updated');\n}\n/**\n * Event `rendered` is triggered when zr\n * rendered. It is useful for realtime\n * snapshot (reflect animation).\n *\n * Event `finished` is triggered when:\n * (1) zrender rendering finished.\n * (2) initial animation finished.\n * (3) progressive rendering finished.\n * (4) no pending action.\n * (5) no delayed setOption needs to be processed.\n */\n\n\nfunction bindRenderedEvent(zr, ecIns) {\n  zr.on('rendered', function () {\n    ecIns.trigger('rendered'); // The `finished` event should not be triggered repeatly,\n    // so it should only be triggered when rendering indeed happend\n    // in zrender. (Consider the case that dipatchAction is keep\n    // triggering when mouse move).\n\n    if ( // Although zr is dirty if initial animation is not finished\n    // and this checking is called on frame, we also check\n    // animation finished for robustness.\n    zr.animation.isFinished() && !ecIns[OPTION_UPDATED] && !ecIns._scheduler.unfinished && !ecIns._pendingActions.length) {\n      ecIns.trigger('finished');\n    }\n  });\n}\n/**\n * @param {Object} params\n * @param {number} params.seriesIndex\n * @param {Array|TypedArray} params.data\n */\n\n\nechartsProto.appendData = function (params) {\n  if (this._disposed) {\n    disposedWarning(this.id);\n    return;\n  }\n\n  var seriesIndex = params.seriesIndex;\n  var ecModel = this.getModel();\n  var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n  seriesModel.appendData(params); // Note: `appendData` does not support that update extent of coordinate\n  // system, util some scenario require that. In the expected usage of\n  // `appendData`, the initial extent of coordinate system should better\n  // be fixed by axis `min`/`max` setting or initial data, otherwise if\n  // the extent changed while `appendData`, the location of the painted\n  // graphic elements have to be changed, which make the usage of\n  // `appendData` meaningless.\n\n  this._scheduler.unfinished = true;\n};\n/**\n * Register event\n * @method\n */\n\n\nechartsProto.on = createRegisterEventWithLowercaseName('on', false);\nechartsProto.off = createRegisterEventWithLowercaseName('off', false);\nechartsProto.one = createRegisterEventWithLowercaseName('one', false);\n/**\n * Prepare view instances of charts and components\n * @param  {module:echarts/model/Global} ecModel\n * @private\n */\n\nfunction prepareView(ecIns, type, ecModel, scheduler) {\n  var isComponent = type === 'component';\n  var viewList = isComponent ? ecIns._componentsViews : ecIns._chartsViews;\n  var viewMap = isComponent ? ecIns._componentsMap : ecIns._chartsMap;\n  var zr = ecIns._zr;\n  var api = ecIns._api;\n\n  for (var i = 0; i < viewList.length; i++) {\n    viewList[i].__alive = false;\n  }\n\n  isComponent ? ecModel.eachComponent(function (componentType, model) {\n    componentType !== 'series' && doPrepare(model);\n  }) : ecModel.eachSeries(doPrepare);\n\n  function doPrepare(model) {\n    // Consider: id same and type changed.\n    var viewId = '_ec_' + model.id + '_' + model.type;\n    var view = viewMap[viewId];\n\n    if (!view) {\n      var classType = parseClassType(model.type);\n      var Clazz = isComponent ? ComponentView.getClass(classType.main, classType.sub) : ChartView.getClass(classType.sub);\n      view = new Clazz();\n      view.init(ecModel, api);\n      viewMap[viewId] = view;\n      viewList.push(view);\n      zr.add(view.group);\n    }\n\n    model.__viewId = view.__id = viewId;\n    view.__alive = true;\n    view.__model = model;\n    view.group.__ecComponentInfo = {\n      mainType: model.mainType,\n      index: model.componentIndex\n    };\n    !isComponent && scheduler.prepareView(view, model, ecModel, api);\n  }\n\n  for (var i = 0; i < viewList.length;) {\n    var view = viewList[i];\n\n    if (!view.__alive) {\n      !isComponent && view.renderTask.dispose();\n      zr.remove(view.group);\n      view.dispose(ecModel, api);\n      viewList.splice(i, 1);\n      delete viewMap[view.__id];\n      view.__id = view.group.__ecComponentInfo = null;\n    } else {\n      i++;\n    }\n  }\n} // /**\n//  * Encode visual infomation from data after data processing\n//  *\n//  * @param {module:echarts/model/Global} ecModel\n//  * @param {object} layout\n//  * @param {boolean} [layoutFilter] `true`: only layout,\n//  *                                 `false`: only not layout,\n//  *                                 `null`/`undefined`: all.\n//  * @param {string} taskBaseTag\n//  * @private\n//  */\n// function startVisualEncoding(ecIns, ecModel, api, payload, layoutFilter) {\n//     each(visualFuncs, function (visual, index) {\n//         var isLayout = visual.isLayout;\n//         if (layoutFilter == null\n//             || (layoutFilter === false && !isLayout)\n//             || (layoutFilter === true && isLayout)\n//         ) {\n//             visual.func(ecModel, api, payload);\n//         }\n//     });\n// }\n\n\nfunction clearColorPalette(ecModel) {\n  ecModel.clearColorPalette();\n  ecModel.eachSeries(function (seriesModel) {\n    seriesModel.clearColorPalette();\n  });\n}\n\nfunction render(ecIns, ecModel, api, payload) {\n  renderComponents(ecIns, ecModel, api, payload);\n  each(ecIns._chartsViews, function (chart) {\n    chart.__alive = false;\n  });\n  renderSeries(ecIns, ecModel, api, payload); // Remove groups of unrendered charts\n\n  each(ecIns._chartsViews, function (chart) {\n    if (!chart.__alive) {\n      chart.remove(ecModel, api);\n    }\n  });\n}\n\nfunction renderComponents(ecIns, ecModel, api, payload, dirtyList) {\n  each(dirtyList || ecIns._componentsViews, function (componentView) {\n    var componentModel = componentView.__model;\n    componentView.render(componentModel, ecModel, api, payload);\n    updateZ(componentModel, componentView);\n  });\n}\n/**\n * Render each chart and component\n * @private\n */\n\n\nfunction renderSeries(ecIns, ecModel, api, payload, dirtyMap) {\n  // Render all charts\n  var scheduler = ecIns._scheduler;\n  var unfinished;\n  ecModel.eachSeries(function (seriesModel) {\n    var chartView = ecIns._chartsMap[seriesModel.__viewId];\n    chartView.__alive = true;\n    var renderTask = chartView.renderTask;\n    scheduler.updatePayload(renderTask, payload);\n\n    if (dirtyMap && dirtyMap.get(seriesModel.uid)) {\n      renderTask.dirty();\n    }\n\n    unfinished |= renderTask.perform(scheduler.getPerformArgs(renderTask));\n    chartView.group.silent = !!seriesModel.get('silent');\n    updateZ(seriesModel, chartView);\n    updateBlend(seriesModel, chartView);\n  });\n  scheduler.unfinished |= unfinished; // If use hover layer\n\n  updateHoverLayerStatus(ecIns, ecModel); // Add aria\n\n  aria(ecIns._zr.dom, ecModel);\n}\n\nfunction performPostUpdateFuncs(ecModel, api) {\n  each(postUpdateFuncs, function (func) {\n    func(ecModel, api);\n  });\n}\n\nvar MOUSE_EVENT_NAMES = ['click', 'dblclick', 'mouseover', 'mouseout', 'mousemove', 'mousedown', 'mouseup', 'globalout', 'contextmenu'];\n/**\n * @private\n */\n\nechartsProto._initEvents = function () {\n  each(MOUSE_EVENT_NAMES, function (eveName) {\n    var handler = function (e) {\n      var ecModel = this.getModel();\n      var el = e.target;\n      var params;\n      var isGlobalOut = eveName === 'globalout'; // no e.target when 'globalout'.\n\n      if (isGlobalOut) {\n        params = {};\n      } else if (el && el.dataIndex != null) {\n        var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n        params = dataModel && dataModel.getDataParams(el.dataIndex, el.dataType, el) || {};\n      } // If element has custom eventData of components\n      else if (el && el.eventData) {\n          params = zrUtil.extend({}, el.eventData);\n        } // Contract: if params prepared in mouse event,\n      // these properties must be specified:\n      // {\n      //    componentType: string (component main type)\n      //    componentIndex: number\n      // }\n      // Otherwise event query can not work.\n\n\n      if (params) {\n        var componentType = params.componentType;\n        var componentIndex = params.componentIndex; // Special handling for historic reason: when trigger by\n        // markLine/markPoint/markArea, the componentType is\n        // 'markLine'/'markPoint'/'markArea', but we should better\n        // enable them to be queried by seriesIndex, since their\n        // option is set in each series.\n\n        if (componentType === 'markLine' || componentType === 'markPoint' || componentType === 'markArea') {\n          componentType = 'series';\n          componentIndex = params.seriesIndex;\n        }\n\n        var model = componentType && componentIndex != null && ecModel.getComponent(componentType, componentIndex);\n        var view = model && this[model.mainType === 'series' ? '_chartsMap' : '_componentsMap'][model.__viewId];\n        params.event = e;\n        params.type = eveName;\n        this._ecEventProcessor.eventInfo = {\n          targetEl: el,\n          packedEvent: params,\n          model: model,\n          view: view\n        };\n        this.trigger(eveName, params);\n      }\n    }; // Consider that some component (like tooltip, brush, ...)\n    // register zr event handler, but user event handler might\n    // do anything, such as call `setOption` or `dispatchAction`,\n    // which probably update any of the content and probably\n    // cause problem if it is called previous other inner handlers.\n\n\n    handler.zrEventfulCallAtLast = true;\n\n    this._zr.on(eveName, handler, this);\n  }, this);\n  each(eventActionMap, function (actionType, eventType) {\n    this._messageCenter.on(eventType, function (event) {\n      this.trigger(eventType, event);\n    }, this);\n  }, this);\n};\n/**\n * @return {boolean}\n */\n\n\nechartsProto.isDisposed = function () {\n  return this._disposed;\n};\n/**\n * Clear\n */\n\n\nechartsProto.clear = function () {\n  if (this._disposed) {\n    disposedWarning(this.id);\n    return;\n  }\n\n  this.setOption({\n    series: []\n  }, true);\n};\n/**\n * Dispose instance\n */\n\n\nechartsProto.dispose = function () {\n  if (this._disposed) {\n    disposedWarning(this.id);\n    return;\n  }\n\n  this._disposed = true;\n  modelUtil.setAttribute(this.getDom(), DOM_ATTRIBUTE_KEY, '');\n  var api = this._api;\n  var ecModel = this._model;\n  each(this._componentsViews, function (component) {\n    component.dispose(ecModel, api);\n  });\n  each(this._chartsViews, function (chart) {\n    chart.dispose(ecModel, api);\n  }); // Dispose after all views disposed\n\n  this._zr.dispose();\n\n  delete instances[this.id];\n};\n\nzrUtil.mixin(ECharts, Eventful);\n\nfunction disposedWarning(id) {}\n\nfunction updateHoverLayerStatus(ecIns, ecModel) {\n  var zr = ecIns._zr;\n  var storage = zr.storage;\n  var elCount = 0;\n  storage.traverse(function (el) {\n    elCount++;\n  });\n\n  if (elCount > ecModel.get('hoverLayerThreshold') && !env.node) {\n    ecModel.eachSeries(function (seriesModel) {\n      if (seriesModel.preventUsingHoverLayer) {\n        return;\n      }\n\n      var chartView = ecIns._chartsMap[seriesModel.__viewId];\n\n      if (chartView.__alive) {\n        chartView.group.traverse(function (el) {\n          // Don't switch back.\n          el.useHoverLayer = true;\n        });\n      }\n    });\n  }\n}\n/**\n * Update chart progressive and blend.\n * @param {module:echarts/model/Series|module:echarts/model/Component} model\n * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n */\n\n\nfunction updateBlend(seriesModel, chartView) {\n  var blendMode = seriesModel.get('blendMode') || null;\n  chartView.group.traverse(function (el) {\n    // FIXME marker and other components\n    if (!el.isGroup) {\n      // Only set if blendMode is changed. In case element is incremental and don't wan't to rerender.\n      if (el.style.blend !== blendMode) {\n        el.setStyle('blend', blendMode);\n      }\n    }\n\n    if (el.eachPendingDisplayable) {\n      el.eachPendingDisplayable(function (displayable) {\n        displayable.setStyle('blend', blendMode);\n      });\n    }\n  });\n}\n/**\n * @param {module:echarts/model/Series|module:echarts/model/Component} model\n * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n */\n\n\nfunction updateZ(model, view) {\n  var z = model.get('z');\n  var zlevel = model.get('zlevel'); // Set z and zlevel\n\n  view.group.traverse(function (el) {\n    if (el.type !== 'group') {\n      z != null && (el.z = z);\n      zlevel != null && (el.zlevel = zlevel);\n    }\n  });\n}\n\nfunction createExtensionAPI(ecInstance) {\n  var coordSysMgr = ecInstance._coordSysMgr;\n  return zrUtil.extend(new ExtensionAPI(ecInstance), {\n    // Inject methods\n    getCoordinateSystems: zrUtil.bind(coordSysMgr.getCoordinateSystems, coordSysMgr),\n    getComponentByElement: function (el) {\n      while (el) {\n        var modelInfo = el.__ecComponentInfo;\n\n        if (modelInfo != null) {\n          return ecInstance._model.getComponent(modelInfo.mainType, modelInfo.index);\n        }\n\n        el = el.parent;\n      }\n    }\n  });\n}\n/**\n * @class\n * Usage of query:\n * `chart.on('click', query, handler);`\n * The `query` can be:\n * + The component type query string, only `mainType` or `mainType.subType`,\n *   like: 'xAxis', 'series', 'xAxis.category' or 'series.line'.\n * + The component query object, like:\n *   `{seriesIndex: 2}`, `{seriesName: 'xx'}`, `{seriesId: 'some'}`,\n *   `{xAxisIndex: 2}`, `{xAxisName: 'xx'}`, `{xAxisId: 'some'}`.\n * + The data query object, like:\n *   `{dataIndex: 123}`, `{dataType: 'link'}`, `{name: 'some'}`.\n * + The other query object (cmponent customized query), like:\n *   `{element: 'some'}` (only available in custom series).\n *\n * Caveat: If a prop in the `query` object is `null/undefined`, it is the\n * same as there is no such prop in the `query` object.\n */\n\n\nfunction EventProcessor() {\n  // These info required: targetEl, packedEvent, model, view\n  this.eventInfo;\n}\n\nEventProcessor.prototype = {\n  constructor: EventProcessor,\n  normalizeQuery: function (query) {\n    var cptQuery = {};\n    var dataQuery = {};\n    var otherQuery = {}; // `query` is `mainType` or `mainType.subType` of component.\n\n    if (zrUtil.isString(query)) {\n      var condCptType = parseClassType(query); // `.main` and `.sub` may be ''.\n\n      cptQuery.mainType = condCptType.main || null;\n      cptQuery.subType = condCptType.sub || null;\n    } // `query` is an object, convert to {mainType, index, name, id}.\n    else {\n        // `xxxIndex`, `xxxName`, `xxxId`, `name`, `dataIndex`, `dataType` is reserved,\n        // can not be used in `compomentModel.filterForExposedEvent`.\n        var suffixes = ['Index', 'Name', 'Id'];\n        var dataKeys = {\n          name: 1,\n          dataIndex: 1,\n          dataType: 1\n        };\n        zrUtil.each(query, function (val, key) {\n          var reserved = false;\n\n          for (var i = 0; i < suffixes.length; i++) {\n            var propSuffix = suffixes[i];\n            var suffixPos = key.lastIndexOf(propSuffix);\n\n            if (suffixPos > 0 && suffixPos === key.length - propSuffix.length) {\n              var mainType = key.slice(0, suffixPos); // Consider `dataIndex`.\n\n              if (mainType !== 'data') {\n                cptQuery.mainType = mainType;\n                cptQuery[propSuffix.toLowerCase()] = val;\n                reserved = true;\n              }\n            }\n          }\n\n          if (dataKeys.hasOwnProperty(key)) {\n            dataQuery[key] = val;\n            reserved = true;\n          }\n\n          if (!reserved) {\n            otherQuery[key] = val;\n          }\n        });\n      }\n\n    return {\n      cptQuery: cptQuery,\n      dataQuery: dataQuery,\n      otherQuery: otherQuery\n    };\n  },\n  filter: function (eventType, query, args) {\n    // They should be assigned before each trigger call.\n    var eventInfo = this.eventInfo;\n\n    if (!eventInfo) {\n      return true;\n    }\n\n    var targetEl = eventInfo.targetEl;\n    var packedEvent = eventInfo.packedEvent;\n    var model = eventInfo.model;\n    var view = eventInfo.view; // For event like 'globalout'.\n\n    if (!model || !view) {\n      return true;\n    }\n\n    var cptQuery = query.cptQuery;\n    var dataQuery = query.dataQuery;\n    return check(cptQuery, model, 'mainType') && check(cptQuery, model, 'subType') && check(cptQuery, model, 'index', 'componentIndex') && check(cptQuery, model, 'name') && check(cptQuery, model, 'id') && check(dataQuery, packedEvent, 'name') && check(dataQuery, packedEvent, 'dataIndex') && check(dataQuery, packedEvent, 'dataType') && (!view.filterForExposedEvent || view.filterForExposedEvent(eventType, query.otherQuery, targetEl, packedEvent));\n\n    function check(query, host, prop, propOnHost) {\n      return query[prop] == null || host[propOnHost || prop] === query[prop];\n    }\n  },\n  afterTrigger: function () {\n    // Make sure the eventInfo wont be used in next trigger.\n    this.eventInfo = null;\n  }\n};\n/**\n * @type {Object} key: actionType.\n * @inner\n */\n\nvar actions = {};\n/**\n * Map eventType to actionType\n * @type {Object}\n */\n\nvar eventActionMap = {};\n/**\n * Data processor functions of each stage\n * @type {Array.<Object.<string, Function>>}\n * @inner\n */\n\nvar dataProcessorFuncs = [];\n/**\n * @type {Array.<Function>}\n * @inner\n */\n\nvar optionPreprocessorFuncs = [];\n/**\n * @type {Array.<Function>}\n * @inner\n */\n\nvar postUpdateFuncs = [];\n/**\n * Visual encoding functions of each stage\n * @type {Array.<Object.<string, Function>>}\n */\n\nvar visualFuncs = [];\n/**\n * Theme storage\n * @type {Object.<key, Object>}\n */\n\nvar themeStorage = {};\n/**\n * Loading effects\n */\n\nvar loadingEffects = {};\nvar instances = {};\nvar connectedGroups = {};\nvar idBase = new Date() - 0;\nvar groupIdBase = new Date() - 0;\nvar DOM_ATTRIBUTE_KEY = '_echarts_instance_';\n\nfunction enableConnect(chart) {\n  var STATUS_PENDING = 0;\n  var STATUS_UPDATING = 1;\n  var STATUS_UPDATED = 2;\n  var STATUS_KEY = '__connectUpdateStatus';\n\n  function updateConnectedChartsStatus(charts, status) {\n    for (var i = 0; i < charts.length; i++) {\n      var otherChart = charts[i];\n      otherChart[STATUS_KEY] = status;\n    }\n  }\n\n  each(eventActionMap, function (actionType, eventType) {\n    chart._messageCenter.on(eventType, function (event) {\n      if (connectedGroups[chart.group] && chart[STATUS_KEY] !== STATUS_PENDING) {\n        if (event && event.escapeConnect) {\n          return;\n        }\n\n        var action = chart.makeActionFromEvent(event);\n        var otherCharts = [];\n        each(instances, function (otherChart) {\n          if (otherChart !== chart && otherChart.group === chart.group) {\n            otherCharts.push(otherChart);\n          }\n        });\n        updateConnectedChartsStatus(otherCharts, STATUS_PENDING);\n        each(otherCharts, function (otherChart) {\n          if (otherChart[STATUS_KEY] !== STATUS_UPDATING) {\n            otherChart.dispatchAction(action);\n          }\n        });\n        updateConnectedChartsStatus(otherCharts, STATUS_UPDATED);\n      }\n    });\n  });\n}\n/**\n * @param {HTMLElement} dom\n * @param {Object} [theme]\n * @param {Object} opts\n * @param {number} [opts.devicePixelRatio] Use window.devicePixelRatio by default\n * @param {string} [opts.renderer] Can choose 'canvas' or 'svg' to render the chart.\n * @param {number} [opts.width] Use clientWidth of the input `dom` by default.\n *                              Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Use clientHeight of the input `dom` by default.\n *                               Can be 'auto' (the same as null/undefined)\n */\n\n\nfunction init(dom, theme, opts) {\n  var existInstance = getInstanceByDom(dom);\n\n  if (existInstance) {\n    return existInstance;\n  }\n\n  var chart = new ECharts(dom, theme, opts);\n  chart.id = 'ec_' + idBase++;\n  instances[chart.id] = chart;\n  modelUtil.setAttribute(dom, DOM_ATTRIBUTE_KEY, chart.id);\n  enableConnect(chart);\n  return chart;\n}\n/**\n * @return {string|Array.<module:echarts~ECharts>} groupId\n */\n\n\nfunction connect(groupId) {\n  // Is array of charts\n  if (zrUtil.isArray(groupId)) {\n    var charts = groupId;\n    groupId = null; // If any chart has group\n\n    each(charts, function (chart) {\n      if (chart.group != null) {\n        groupId = chart.group;\n      }\n    });\n    groupId = groupId || 'g_' + groupIdBase++;\n    each(charts, function (chart) {\n      chart.group = groupId;\n    });\n  }\n\n  connectedGroups[groupId] = true;\n  return groupId;\n}\n/**\n * @DEPRECATED\n * @return {string} groupId\n */\n\n\nfunction disConnect(groupId) {\n  connectedGroups[groupId] = false;\n}\n/**\n * @return {string} groupId\n */\n\n\nvar disconnect = disConnect;\n/**\n * Dispose a chart instance\n * @param  {module:echarts~ECharts|HTMLDomElement|string} chart\n */\n\nfunction dispose(chart) {\n  if (typeof chart === 'string') {\n    chart = instances[chart];\n  } else if (!(chart instanceof ECharts)) {\n    // Try to treat as dom\n    chart = getInstanceByDom(chart);\n  }\n\n  if (chart instanceof ECharts && !chart.isDisposed()) {\n    chart.dispose();\n  }\n}\n/**\n * @param  {HTMLElement} dom\n * @return {echarts~ECharts}\n */\n\n\nfunction getInstanceByDom(dom) {\n  return instances[modelUtil.getAttribute(dom, DOM_ATTRIBUTE_KEY)];\n}\n/**\n * @param {string} key\n * @return {echarts~ECharts}\n */\n\n\nfunction getInstanceById(key) {\n  return instances[key];\n}\n/**\n * Register theme\n */\n\n\nfunction registerTheme(name, theme) {\n  themeStorage[name] = theme;\n}\n/**\n * Register option preprocessor\n * @param {Function} preprocessorFunc\n */\n\n\nfunction registerPreprocessor(preprocessorFunc) {\n  optionPreprocessorFuncs.push(preprocessorFunc);\n}\n/**\n * @param {number} [priority=1000]\n * @param {Object|Function} processor\n */\n\n\nfunction registerProcessor(priority, processor) {\n  normalizeRegister(dataProcessorFuncs, priority, processor, PRIORITY_PROCESSOR_FILTER);\n}\n/**\n * Register postUpdater\n * @param {Function} postUpdateFunc\n */\n\n\nfunction registerPostUpdate(postUpdateFunc) {\n  postUpdateFuncs.push(postUpdateFunc);\n}\n/**\n * Usage:\n * registerAction('someAction', 'someEvent', function () { ... });\n * registerAction('someAction', function () { ... });\n * registerAction(\n *     {type: 'someAction', event: 'someEvent', update: 'updateView'},\n *     function () { ... }\n * );\n *\n * @param {(string|Object)} actionInfo\n * @param {string} actionInfo.type\n * @param {string} [actionInfo.event]\n * @param {string} [actionInfo.update]\n * @param {string} [eventName]\n * @param {Function} action\n */\n\n\nfunction registerAction(actionInfo, eventName, action) {\n  if (typeof eventName === 'function') {\n    action = eventName;\n    eventName = '';\n  }\n\n  var actionType = isObject(actionInfo) ? actionInfo.type : [actionInfo, actionInfo = {\n    event: eventName\n  }][0]; // Event name is all lowercase\n\n  actionInfo.event = (actionInfo.event || actionType).toLowerCase();\n  eventName = actionInfo.event; // Validate action type and event name.\n\n  assert(ACTION_REG.test(actionType) && ACTION_REG.test(eventName));\n\n  if (!actions[actionType]) {\n    actions[actionType] = {\n      action: action,\n      actionInfo: actionInfo\n    };\n  }\n\n  eventActionMap[eventName] = actionType;\n}\n/**\n * @param {string} type\n * @param {*} CoordinateSystem\n */\n\n\nfunction registerCoordinateSystem(type, CoordinateSystem) {\n  CoordinateSystemManager.register(type, CoordinateSystem);\n}\n/**\n * Get dimensions of specified coordinate system.\n * @param {string} type\n * @return {Array.<string|Object>}\n */\n\n\nfunction getCoordinateSystemDimensions(type) {\n  var coordSysCreator = CoordinateSystemManager.get(type);\n\n  if (coordSysCreator) {\n    return coordSysCreator.getDimensionsInfo ? coordSysCreator.getDimensionsInfo() : coordSysCreator.dimensions.slice();\n  }\n}\n/**\n * Layout is a special stage of visual encoding\n * Most visual encoding like color are common for different chart\n * But each chart has it's own layout algorithm\n *\n * @param {number} [priority=1000]\n * @param {Function} layoutTask\n */\n\n\nfunction registerLayout(priority, layoutTask) {\n  normalizeRegister(visualFuncs, priority, layoutTask, PRIORITY_VISUAL_LAYOUT, 'layout');\n}\n/**\n * @param {number} [priority=3000]\n * @param {module:echarts/stream/Task} visualTask\n */\n\n\nfunction registerVisual(priority, visualTask) {\n  normalizeRegister(visualFuncs, priority, visualTask, PRIORITY_VISUAL_CHART, 'visual');\n}\n/**\n * @param {Object|Function} fn: {seriesType, createOnAllSeries, performRawSeries, reset}\n */\n\n\nfunction normalizeRegister(targetList, priority, fn, defaultPriority, visualType) {\n  if (isFunction(priority) || isObject(priority)) {\n    fn = priority;\n    priority = defaultPriority;\n  }\n\n  var stageHandler = Scheduler.wrapStageHandler(fn, visualType);\n  stageHandler.__prio = priority;\n  stageHandler.__raw = fn;\n  targetList.push(stageHandler);\n  return stageHandler;\n}\n/**\n * @param {string} name\n */\n\n\nfunction registerLoading(name, loadingFx) {\n  loadingEffects[name] = loadingFx;\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendComponentModel(opts\n/*, superClass*/\n) {\n  // var Clazz = ComponentModel;\n  // if (superClass) {\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n  // }\n  return ComponentModel.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendComponentView(opts\n/*, superClass*/\n) {\n  // var Clazz = ComponentView;\n  // if (superClass) {\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentView.getClass(classType.main, classType.sub, true);\n  // }\n  return ComponentView.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendSeriesModel(opts\n/*, superClass*/\n) {\n  // var Clazz = SeriesModel;\n  // if (superClass) {\n  //     superClass = 'series.' + superClass.replace('series.', '');\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n  // }\n  return SeriesModel.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendChartView(opts\n/*, superClass*/\n) {\n  // var Clazz = ChartView;\n  // if (superClass) {\n  //     superClass = superClass.replace('series.', '');\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ChartView.getClass(classType.main, true);\n  // }\n  return ChartView.extend(opts);\n}\n/**\n * ZRender need a canvas context to do measureText.\n * But in node environment canvas may be created by node-canvas.\n * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n *\n * Be careful of using it in the browser.\n *\n * @param {Function} creator\n * @example\n *     var Canvas = require('canvas');\n *     var echarts = require('echarts');\n *     echarts.setCanvasCreator(function () {\n *         // Small size is enough.\n *         return new Canvas(32, 32);\n *     });\n */\n\n\nfunction setCanvasCreator(creator) {\n  zrUtil.$override('createCanvas', creator);\n}\n/**\n * @param {string} mapName\n * @param {Array.<Object>|Object|string} geoJson\n * @param {Object} [specialAreas]\n *\n * @example GeoJSON\n *     $.get('USA.json', function (geoJson) {\n *         echarts.registerMap('USA', geoJson);\n *         // Or\n *         echarts.registerMap('USA', {\n *             geoJson: geoJson,\n *             specialAreas: {}\n *         })\n *     });\n *\n *     $.get('airport.svg', function (svg) {\n *         echarts.registerMap('airport', {\n *             svg: svg\n *         }\n *     });\n *\n *     echarts.registerMap('eu', [\n *         {svg: eu-topographic.svg},\n *         {geoJSON: eu.json}\n *     ])\n */\n\n\nfunction registerMap(mapName, geoJson, specialAreas) {\n  mapDataStorage.registerMap(mapName, geoJson, specialAreas);\n}\n/**\n * @param {string} mapName\n * @return {Object}\n */\n\n\nfunction getMap(mapName) {\n  // For backward compatibility, only return the first one.\n  var records = mapDataStorage.retrieveMap(mapName);\n  return records && records[0] && {\n    geoJson: records[0].geoJSON,\n    specialAreas: records[0].specialAreas\n  };\n}\n\nregisterVisual(PRIORITY_VISUAL_GLOBAL, seriesColor);\nregisterPreprocessor(backwardCompat);\nregisterProcessor(PRIORITY_PROCESSOR_DATASTACK, dataStack);\nregisterLoading('default', loadingDefault); // Default actions\n\nregisterAction({\n  type: 'highlight',\n  event: 'highlight',\n  update: 'highlight'\n}, zrUtil.noop);\nregisterAction({\n  type: 'downplay',\n  event: 'downplay',\n  update: 'downplay'\n}, zrUtil.noop); // Default theme\n\nregisterTheme('light', lightTheme);\nregisterTheme('dark', darkTheme); // For backward compatibility, where the namespace `dataTool` will\n// be mounted on `echarts` is the extension `dataTool` is imported.\n\nvar dataTool = {};\nexports.version = version;\nexports.dependencies = dependencies;\nexports.PRIORITY = PRIORITY;\nexports.init = init;\nexports.connect = connect;\nexports.disConnect = disConnect;\nexports.disconnect = disconnect;\nexports.dispose = dispose;\nexports.getInstanceByDom = getInstanceByDom;\nexports.getInstanceById = getInstanceById;\nexports.registerTheme = registerTheme;\nexports.registerPreprocessor = registerPreprocessor;\nexports.registerProcessor = registerProcessor;\nexports.registerPostUpdate = registerPostUpdate;\nexports.registerAction = registerAction;\nexports.registerCoordinateSystem = registerCoordinateSystem;\nexports.getCoordinateSystemDimensions = getCoordinateSystemDimensions;\nexports.registerLayout = registerLayout;\nexports.registerVisual = registerVisual;\nexports.registerLoading = registerLoading;\nexports.extendComponentModel = extendComponentModel;\nexports.extendComponentView = extendComponentView;\nexports.extendSeriesModel = extendSeriesModel;\nexports.extendChartView = extendChartView;\nexports.setCanvasCreator = setCanvasCreator;\nexports.registerMap = registerMap;\nexports.getMap = getMap;\nexports.dataTool = dataTool;\nvar ___ec_export = require(\"./export\");\n(function () {\n    for (var key in ___ec_export) {\n        if (___ec_export.hasOwnProperty(key)) {\n            exports[key] = ___ec_export[key];\n        }\n    }\n})();","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../echarts\");\n\nrequire(\"./line/LineSeries\");\n\nrequire(\"./line/LineView\");\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nvar layoutPoints = require(\"../layout/points\");\n\nvar dataSample = require(\"../processor/dataSample\");\n\nrequire(\"../component/gridSimple\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// In case developer forget to include grid component\necharts.registerVisual(visualSymbol('line', 'circle', 'line'));\necharts.registerLayout(layoutPoints('line')); // Down sample after filter\n\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, dataSample('line'));","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../echarts\");\n\nrequire(\"./axisPointer\");\n\nrequire(\"./tooltip/TooltipModel\");\n\nrequire(\"./tooltip/TooltipView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// FIXME Better way to pack data in graphic element\n\n/**\n * @action\n * @property {string} type\n * @property {number} seriesIndex\n * @property {number} dataIndex\n * @property {number} [x]\n * @property {number} [y]\n */\necharts.registerAction({\n  type: 'showTip',\n  event: 'showTip',\n  update: 'tooltip:manuallyShowTip'\n}, // noop\nfunction () {});\necharts.registerAction({\n  type: 'hideTip',\n  event: 'hideTip',\n  update: 'tooltip:manuallyHideTip'\n}, // noop\nfunction () {});","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar echarts = require(\"../echarts\");\n\nvar graphic = require(\"../util/graphic\");\n\nvar _layout = require(\"../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Model\necharts.extendComponentModel({\n  type: 'title',\n  layoutMode: {\n    type: 'box',\n    ignoreSize: true\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 6,\n    show: true,\n    text: '',\n    // 超链接跳转\n    // link: null,\n    // 仅支持self | blank\n    target: 'blank',\n    subtext: '',\n    // 超链接跳转\n    // sublink: null,\n    // 仅支持self | blank\n    subtarget: 'blank',\n    // 'center' ¦ 'left' ¦ 'right'\n    // ¦ {number}（x坐标，单位px）\n    left: 0,\n    // 'top' ¦ 'bottom' ¦ 'center'\n    // ¦ {number}（y坐标，单位px）\n    top: 0,\n    // 水平对齐\n    // 'auto' | 'left' | 'right' | 'center'\n    // 默认根据 left 的位置判断是左对齐还是右对齐\n    // textAlign: null\n    //\n    // 垂直对齐\n    // 'auto' | 'top' | 'bottom' | 'middle'\n    // 默认根据 top 位置判断是上对齐还是下对齐\n    // textVerticalAlign: null\n    // textBaseline: null // The same as textVerticalAlign.\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 标题边框颜色\n    borderColor: '#ccc',\n    // 标题边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 标题内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // 主副标题纵向间隔，单位px，默认为10，\n    itemGap: 10,\n    textStyle: {\n      fontSize: 18,\n      fontWeight: 'bolder',\n      color: '#333'\n    },\n    subtextStyle: {\n      color: '#aaa'\n    }\n  }\n}); // View\n\necharts.extendComponentView({\n  type: 'title',\n  render: function (titleModel, ecModel, api) {\n    this.group.removeAll();\n\n    if (!titleModel.get('show')) {\n      return;\n    }\n\n    var group = this.group;\n    var textStyleModel = titleModel.getModel('textStyle');\n    var subtextStyleModel = titleModel.getModel('subtextStyle');\n    var textAlign = titleModel.get('textAlign');\n    var textVerticalAlign = zrUtil.retrieve2(titleModel.get('textBaseline'), titleModel.get('textVerticalAlign'));\n    var textEl = new graphic.Text({\n      style: graphic.setTextStyle({}, textStyleModel, {\n        text: titleModel.get('text'),\n        textFill: textStyleModel.getTextColor()\n      }, {\n        disableBox: true\n      }),\n      z2: 10\n    });\n    var textRect = textEl.getBoundingRect();\n    var subText = titleModel.get('subtext');\n    var subTextEl = new graphic.Text({\n      style: graphic.setTextStyle({}, subtextStyleModel, {\n        text: subText,\n        textFill: subtextStyleModel.getTextColor(),\n        y: textRect.height + titleModel.get('itemGap'),\n        textVerticalAlign: 'top'\n      }, {\n        disableBox: true\n      }),\n      z2: 10\n    });\n    var link = titleModel.get('link');\n    var sublink = titleModel.get('sublink');\n    var triggerEvent = titleModel.get('triggerEvent', true);\n    textEl.silent = !link && !triggerEvent;\n    subTextEl.silent = !sublink && !triggerEvent;\n\n    if (link) {\n      textEl.on('click', function () {\n        window.open(link, '_' + titleModel.get('target'));\n      });\n    }\n\n    if (sublink) {\n      subTextEl.on('click', function () {\n        window.open(sublink, '_' + titleModel.get('subtarget'));\n      });\n    }\n\n    textEl.eventData = subTextEl.eventData = triggerEvent ? {\n      componentType: 'title',\n      componentIndex: titleModel.componentIndex\n    } : null;\n    group.add(textEl);\n    subText && group.add(subTextEl); // If no subText, but add subTextEl, there will be an empty line.\n\n    var groupRect = group.getBoundingRect();\n    var layoutOption = titleModel.getBoxLayoutParams();\n    layoutOption.width = groupRect.width;\n    layoutOption.height = groupRect.height;\n    var layoutRect = getLayoutRect(layoutOption, {\n      width: api.getWidth(),\n      height: api.getHeight()\n    }, titleModel.get('padding')); // Adjust text align based on position\n\n    if (!textAlign) {\n      // Align left if title is on the left. center and right is same\n      textAlign = titleModel.get('left') || titleModel.get('right');\n\n      if (textAlign === 'middle') {\n        textAlign = 'center';\n      } // Adjust layout by text align\n\n\n      if (textAlign === 'right') {\n        layoutRect.x += layoutRect.width;\n      } else if (textAlign === 'center') {\n        layoutRect.x += layoutRect.width / 2;\n      }\n    }\n\n    if (!textVerticalAlign) {\n      textVerticalAlign = titleModel.get('top') || titleModel.get('bottom');\n\n      if (textVerticalAlign === 'center') {\n        textVerticalAlign = 'middle';\n      }\n\n      if (textVerticalAlign === 'bottom') {\n        layoutRect.y += layoutRect.height;\n      } else if (textVerticalAlign === 'middle') {\n        layoutRect.y += layoutRect.height / 2;\n      }\n\n      textVerticalAlign = textVerticalAlign || 'top';\n    }\n\n    group.attr('position', [layoutRect.x, layoutRect.y]);\n    var alignStyle = {\n      textAlign: textAlign,\n      textVerticalAlign: textVerticalAlign\n    };\n    textEl.setStyle(alignStyle);\n    subTextEl.setStyle(alignStyle); // Render background\n    // Get groupRect again because textAlign has been changed\n\n    groupRect = group.getBoundingRect();\n    var padding = layoutRect.margin;\n    var style = titleModel.getItemStyle(['color', 'opacity']);\n    style.fill = titleModel.get('backgroundColor');\n    var rect = new graphic.Rect({\n      shape: {\n        x: groupRect.x - padding[3],\n        y: groupRect.y - padding[0],\n        width: groupRect.width + padding[1] + padding[3],\n        height: groupRect.height + padding[0] + padding[2],\n        r: titleModel.get('borderRadius')\n      },\n      style: style,\n      subPixelOptimize: true,\n      silent: true\n    });\n    group.add(rect);\n  }\n});","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nrequire(\"./toolbox/ToolboxModel\");\n\nrequire(\"./toolbox/ToolboxView\");\n\nrequire(\"./toolbox/feature/SaveAsImage\");\n\nrequire(\"./toolbox/feature/MagicType\");\n\nrequire(\"./toolbox/feature/DataView\");\n\nrequire(\"./toolbox/feature/DataZoom\");\n\nrequire(\"./toolbox/feature/Restore\");","// 引入 echarts 主模块。\r\nimport * as echarts from 'echarts/lib/echarts';\r\n// 引入折线图。\r\nimport 'echarts/lib/chart/line';\r\n// 引入提示框组件、标题组件、工具箱组件。\r\nimport 'echarts/lib/component/tooltip';\r\nimport 'echarts/lib/component/title';\r\nimport 'echarts/lib/component/toolbox';\r\n\r\n// 基于准备好的dom，初始化 echarts 实例并绘制图表。\r\necharts.init(document.getElementById('main')).setOption({\r\n  title: { text: 'Line Chart' },\r\n  tooltip: {},\r\n  toolbox: {\r\n    feature: {\r\n      dataView: {},\r\n      saveAsImage: {\r\n        pixelRatio: 2\r\n      },\r\n      restore: {}\r\n    }\r\n  },\r\n  xAxis: {},\r\n  yAxis: {},\r\n  series: [{\r\n    type: 'line',\r\n    smooth: true,\r\n    data: [[12, 5], [24, 20], [36, 36], [48, 10], [60, 10], [72, 20]]\r\n  }]\r\n});"],"names":["require","__DEV__","zrender","zrUtil","colorTool","env","timsort","Eventful","GlobalModel","ExtensionAPI","CoordinateSystemManager","OptionManager","backwardCompat","dataStack","ComponentModel","SeriesModel","ComponentView","ChartView","graphic","modelUtil","throttle","seriesColor","aria","loadingDefault","Scheduler","lightTheme","darkTheme","mapDataStorage","assert","each","isFunction","isObject","parseClassType","PRIORITY","PROCESSOR","FILTER","SERIES_FILTER","STATISTIC","VISUAL","LAYOUT","PROGRESSIVE_LAYOUT","GLOBAL","CHART","POST_CHART_LAYOUT","COMPONENT","BRUSH","IN_MAIN_PROCESS","OPTION_UPDATED","ACTION_REG","createRegisterEventWithLowercaseName","method","ignoreDisposed","eventName","handler","context","this","_disposed","toLowerCase","prototype","call","id","MessageCenter","ECharts","dom","theme","opts","themeStorage","group","_dom","zr","_zr","init","renderer","devicePixelRatio","width","height","_throttledZrFlush","bind","flush","clone","_theme","_chartsViews","_chartsMap","_componentsViews","_componentsMap","_coordSysMgr","ecInstance","coordSysMgr","ecIns","api","_api","extend","getCoordinateSystems","getComponentByElement","el","modelInfo","__ecComponentInfo","_model","getComponent","mainType","index","parent","prioritySortFunc","a","b","__prio","visualFuncs","dataProcessorFuncs","_scheduler","_ecEventProcessor","EventProcessor","_messageCenter","_initEvents","resize","_pendingActions","animation","on","_onframe","trigger","isFinished","unfinished","length","setAsPrimitive","off","one","mixin","echartsProto","doConvertPixel","methodName","finder","value","result","ecModel","coordSysList","parseFinder","i","coordSys","scheduler","silent","prepare","updateMethods","update","flushPendingActions","triggerUpdatedEvent","remainTime","startTime","Date","performSeriesTasks","performDataProcessorTasks","updateStreamModes","performVisualTasks","renderSeries","getDom","getZr","setOption","option","notMerge","lazyUpdate","optionManager","optionPreprocessorFuncs","setTheme","console","error","getModel","getOption","getWidth","getHeight","getDevicePixelRatio","painter","dpr","window","getRenderedCanvas","canvasSupported","pixelRatio","backgroundColor","get","getSvgDataUrl","svgSupported","list","storage","getDisplayList","stopAnimation","pathToDataUrl","getDataURL","excludeComponents","excludesComponentViews","self","componentType","eachComponent","component","view","__viewId","ignore","push","url","getType","toDataURL","type","getConnectedDataURL","groupId","mathMin","Math","min","mathMax","max","connectedGroups","left","Infinity","top","right","bottom","canvasList","instances","chart","canvas","boundingRect","getBoundingClientRect","targetCanvas","createCanvas","connectedBackgroundColor","add","Rect","shape","x","y","style","fill","item","img","Image","image","refreshImmediately","convertToPixel","curry","convertFromPixel","containPixel","models","key","indexOf","model","coordinateSystem","containPoint","getVisual","visualType","data","defaultMainType","seriesModel","getData","dataIndexInside","hasOwnProperty","indexOfRawIndex","dataIndex","getItemVisual","getViewOfComponentModel","componentModel","getViewOfSeriesModel","prepareAndUpdate","payload","restoreData","create","clearColorPalette","render","setBackgroundColor","colorArr","parse","stringify","performPostUpdateFuncs","updateTransform","componentDirtyList","componentView","__alive","seriesDirtyMap","createHashMap","eachSeries","chartView","set","uid","setDirty","dirtyMap","updateView","markUpdateMethod","updateVisual","updateLayout","restorePipelines","prepareStageTasks","prepareView","plan","updateDirectly","subType","query","condition","excludeSeriesId","normalizeToArray","callView","concat","__model","chartsMap","doDispatchAction","payloadType","escapeConnect","actionWrap","actions","actionInfo","cptType","split","updateMethod","pop","payloads","batched","batch","map","defaults","eventObj","eventObjBatch","isHighDown","batchItem","action","event","main","sub","pendingActions","shift","isComponent","viewList","viewMap","doPrepare","viewId","classType","getClass","__id","componentIndex","renderTask","dispose","remove","splice","dirtyList","updateZ","elCount","blendMode","updatePayload","dirty","perform","getPerformArgs","traverse","isGroup","blend","setStyle","eachPendingDisplayable","displayable","node","preventUsingHoverLayer","useHoverLayer","postUpdateFuncs","func","_loadingFX","optionChanged","resetOption","showLoading","name","cfg","hideLoading","loadingEffects","makeActionFromEvent","eventActionMap","dispatchAction","opt","browser","weChat","appendData","params","seriesIndex","getSeriesByIndex","MOUSE_EVENT_NAMES","z","zlevel","eventInfo","eveName","e","target","dataModel","getDataParams","dataType","eventData","targetEl","packedEvent","zrEventfulCallAtLast","actionType","eventType","isDisposed","clear","series","setAttribute","DOM_ATTRIBUTE_KEY","constructor","normalizeQuery","cptQuery","dataQuery","otherQuery","isString","condCptType","suffixes","dataKeys","val","reserved","propSuffix","suffixPos","lastIndexOf","slice","filter","args","check","filterForExposedEvent","host","prop","propOnHost","afterTrigger","idBase","groupIdBase","disConnect","disconnect","getInstanceByDom","getAttribute","registerTheme","registerPreprocessor","preprocessorFunc","registerProcessor","priority","processor","normalizeRegister","registerAction","test","registerVisual","visualTask","targetList","fn","defaultPriority","stageHandler","wrapStageHandler","__raw","registerLoading","loadingFx","noop","exports","version","dependencies","existInstance","STATUS_KEY","updateConnectedChartsStatus","charts","status","otherCharts","otherChart","connect","isArray","getInstanceById","registerPostUpdate","postUpdateFunc","registerCoordinateSystem","CoordinateSystem","register","getCoordinateSystemDimensions","coordSysCreator","getDimensionsInfo","dimensions","registerLayout","layoutTask","extendComponentModel","extendComponentView","extendSeriesModel","extendChartView","setCanvasCreator","creator","$override","registerMap","mapName","geoJson","specialAreas","getMap","records","retrieveMap","geoJSON","dataTool","___ec_export","echarts","visualSymbol","layoutPoints","dataSample","getLayoutRect","layoutMode","ignoreSize","defaultOption","show","text","subtext","subtarget","borderColor","borderWidth","padding","itemGap","textStyle","fontSize","fontWeight","color","subtextStyle","titleModel","removeAll","textStyleModel","subtextStyleModel","textAlign","textVerticalAlign","retrieve2","textEl","Text","setTextStyle","textFill","getTextColor","disableBox","z2","textRect","getBoundingRect","subText","subTextEl","link","sublink","triggerEvent","open","groupRect","layoutOption","getBoxLayoutParams","layoutRect","attr","alignStyle","margin","getItemStyle","rect","r","subPixelOptimize","document","getElementById","title","tooltip","toolbox","feature","dataView","saveAsImage","restore","xAxis","yAxis","smooth"],"mappings":"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"}